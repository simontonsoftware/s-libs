@use "sass:map";
@use "@angular/material" as mat;

@mixin _module-theme($name, $theme) {
  @if $name == "all" {
    @include mat.all-component-themes($theme);
  } @else if $name == "autocomplete" {
    @include mat.autocomplete-theme($theme);
  } @else if $name == "badge" {
    @include mat.badge-theme($theme);
  } @else if $name == "bottom-sheet" {
    @include mat.bottom-sheet-theme($theme);
  } @else if $name == "button" {
    @include mat.button-theme($theme);
  } @else if $name == "button-toggle" {
    @include mat.button-toggle-theme($theme);
  } @else if $name == "card" {
    @include mat.card-theme($theme);
  } @else if $name == "checkbox" {
    @include mat.checkbox-theme($theme);
  } @else if $name == "chips" {
    @include mat.chips-theme($theme);
  } @else if $name == "core" {
    @include mat.elevation-classes();
    @include mat.app-background();
  } @else if $name == "datepicker" {
    @include mat.datepicker-theme($theme);
  } @else if $name == "dialog" {
    @include mat.dialog-theme($theme);
  } @else if $name == "divider" {
    @include mat.divider-theme($theme);
  } @else if $name == "expansion" {
    @include mat.expansion-theme($theme);
  } @else if $name == "fab" {
    @include mat.fab-theme($theme);
  } @else if $name == "form-field" {
    @include mat.form-field-theme($theme);
  } @else if $name == "grid-list" {
    @include mat.grid-list-theme($theme);
  } @else if $name == "icon" {
    @include mat.icon-theme($theme);
  } @else if $name == "icon-button" {
    @include mat.icon-button-theme($theme);
  } @else if $name == "input" {
    @include mat.input-theme($theme);
  } @else if $name == "list" {
    @include mat.list-theme($theme);
  } @else if $name == "menu" {
    @include mat.menu-theme($theme);
  } @else if $name == "paginator" {
    @include mat.paginator-theme($theme);
  } @else if $name == "progress-bar" {
    @include mat.progress-bar-theme($theme);
  } @else if $name == "progress-spinner" {
    @include mat.progress-spinner-theme($theme);
  } @else if $name == "radio" {
    @include mat.radio-theme($theme);
  } @else if $name == "select" {
    @include mat.select-theme($theme);
  } @else if $name == "sidenav" {
    @include mat.sidenav-theme($theme);
  } @else if $name == "slide-toggle" {
    @include mat.slide-toggle-theme($theme);
  } @else if $name == "slider" {
    @include mat.slider-theme($theme);
  } @else if $name == "snack-bar" {
    @include mat.snack-bar-theme($theme);
  } @else if $name == "sort" {
    @include mat.sort-theme($theme);
  } @else if $name == "stepper" {
    @include mat.stepper-theme($theme);
  } @else if $name == "table" {
    @include mat.table-theme($theme);
  } @else if $name == "tabs" {
    @include mat.tabs-theme($theme);
  } @else if $name == "toolbar" {
    @include mat.toolbar-theme($theme);
  } @else if $name == "tooltip" {
    @include mat.tooltip-theme($theme);
  } @else if $name == "tree" {
    @include mat.tree-theme($theme);
  }
}

@mixin _module-themes($theme, $config) {
  $modules: map.get($config, "modules") or ("all");
  @each $name in $modules {
    @include _module-theme($name, $theme);
  }
}

@function _build-theme-arg($config, $palette-key) {
  $typography: map.get($config, "typography");
  @if not map.has-key($config, "typography") {
    $typography: mat.m2-define-typography-config();
  }
  @return (
    color: map.get($config, $palette-key),
    typography: $typography,
    density: map.get($config, "density") or 0
  );
}

/// Includes a dark theme for your app. This defines colors, typography, and density.
///
/// @param {Map} $config - The config object used for multiple mixins in this library. See the example in [`mixin-full-theming()`](#mixin-full-theming) for a description of all its options.
/// @param {String} $palette-key ["dark-palettes"] - Which color to use from `$config`.
@mixin dark-theme($config, $palette-key: "dark-palettes") {
  $theme: mat.m2-define-dark-theme(_build-theme-arg($config, $palette-key));
  @include _module-themes($theme, $config);
}

/// Includes a light theme for your app. This defines colors, typography, and density.
///
/// @param {Map} $config - The config object used for multiple mixins in this library. See the example in [`mixin-full-theming()`](#mixin-full-theming) for a description of all its options.
/// @param {String} $palette-key ["light-palettes"] - Which color to use from `$config`.
@mixin light-theme($config, $palette-key: "light-palettes") {
  $theme: mat.m2-define-light-theme(_build-theme-arg($config, $palette-key));
  @include _module-themes($theme, $config);
}
